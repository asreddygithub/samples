[versions]
tagit-Core-version = '7.4.0-SNAPSHOT'

spring-boot-version = "2.6.7"
springs-core-version = "1.0.11.RELEASE"
spring-version = "1.0.7.BUILD-SNAPSHOT"
spring-cloud-Version="2021.0.1"

servlet-version = "4.0.1"
kafka-version = "3.1.0"
micrometer-version = "1.8.2"
oracle-version = "21.5.0.0"
java-mail-version = "1.4.7"

commons-text-version = "1.9"
commons-lang3-version = "3.12.0"
commons-collections-version="4.4"
commons-codec-version = "1.15"
http-client-version = "4.5.13"
commons-httpclient-version = "3.1"

nimbusjosejwt-version = "7.9"
jsonsmart-version = "2.4.7"

google-gson-version = "2.9.0"
jackson-dataformat-version = "2.11.3"
flyway-core-version = "8.0.5"
orika-core-version = "1.5.2"
encryption-version = "1.0.0"
jasypt-version = "1.9.3"
disruptor-version="3.4.2"
mxlogger-version="1.2.0.6"
spring-security-oauth2-version = "2.5.1.RELEASE"
mxtenancy-version = "1.0.0.0"
lombok-annotation-version = "1.18.22"
log4j-api-version = "2.17.1"
spring-cloud-starter-version = "3.1.1"
spring-clouds-starter-oauth2 = "2.2.5.RELEASE"
springcore-version = "5.3.19"
hibernate-version = "5.6.5.Final"
hibernate-validator = "6.1.6.Final"
hibernatejpa-version = "1.0.0.Final"
jboss-version = "3.3.0.Final"
classmate-version = "1.3.0"
fasterxml-dataformat-version = "1.3.0"
fasterxml-classmate-version = "1.3.0"
jackson-databind-version = "2.11.0"
ehcache-version = "2.10.1"
ehcachecore-version = "2.6.11"
aspect-version = "1.8.9"
apachegeronimo-version = "1.1.1"
jta-version = "1.1"
antlr-version = "2.7.7"
javassist-version = "3.20.0-GA"
dom4j-version = "2.1.3"
slf4j-version = "1.7.7"
beanutils-version = "1.9.4"
interceptor-version = "1.2-b06"
swagger2-version = "3.0.0"
guava-version = "31.1-jre"
swaggerui-version = "3.0.0"
bcprovjdk15on-version = "1.70"
bcprov-jdk18on-version = "1.71"
junit-version = "4.13.1"
springtest-version = "4.3.16.RELEASE"
hamcrestcore-version = "1.3"
mockitoall-version = "1.10.19"
spring-data-jpa-Version = "2.1.8.RELEASE"
hibernate-annotation-version = "5.0.1.Final"
jboss-jandex-version = "2.0.3.Final"
commonslang-version = "2.6"
swaggerannotation-version = "1.5.20"
jaxb-version = "2.2.4"
jxannotation-version = "1.2-b01"
googleauthcore-version = "3.2.1"
googleauth-version = "1.5.0"
zxing-version = "3.2.1"
pull-parser-version = "2.1.10"
commons-io-version = "2.4"
poiooxml-version = "5.0.0"
jacoco-agent-version = "0.7.4.201502262128"
powermock-version = "1.7.1"

tomcat-embed-version = "9.0.62"
servlet-jstl-version = "1.2"
antisamy-version = "1.6.4"
android-util-version = "1.0.2"
commons-compiler-version = "3.1.4"
commons-configuration-version = "1.10"


jasperreports-version = "6.19.0"
openpdf-version = "1.3.27"
jasperreports-fonts-version = "6.19.0"

swaggermodels-version = "1.6.3"
c3p0-version = "0.9.5.5"
quartz-version = "2.3.2"
saxon-dom-version = "8.7"
poi-version = "4.1.2"
jackson-core-version = "2.13.0"
jdk15on-version = "1.70"
xml-resolver-version = "1.2"
xml-apis-version="2.0.2"
xmlbeans-version = "3.1.0"
xmlbeans-qname-version = "2.6.0"
xmlbeans-xmlpublic-version = "2.6.0"
commons-validator-version = "1.7.0.redhat-00001"
commons-fileupload-version = "1.4"
commons-configuration2-version = "2.7"
commons-digester-version = "2.1"
imgscalr-lib-version = "4.2"
batik-all-version = "1.14"
fop-version = "2.6"
java-image-scaling-version = "0.8.6"
hazelcast-version = "4.2"
jms-api-version = "2.0.1"
dd-plist-version = "1.3"
jupiter-api-version = "5.8.1"
mockito-core-version = "4.0.0"
hamcrest-version = "2.2"
commons-compress-version = "1.21"
oscache-version = '2.4.1'
google-http-client-version = "1.40.1"
freemarker-version = "2.3.31"
spring-integration-mail-version = "5.5.6"
velocity-engine-core-version = "2.3"
owasp-csrfguard-version = "3.1.0"
wsdl4j-version = "1.6.3"


[libraries]
servlet= {module = "javax.servlet:javax.servlet-api" ,version.ref = "servlet-version"}
javaxmail = {module = "javax.mail:mail" ,version.ref = "java-mail-version"}
jta  = {module = "javax.transaction:jta" ,version.ref = "jta-version"}
interceptor  = {module = "javax.interceptor:javax.interceptor-api" ,version.ref = "interceptor-version"}
jaxb  = {module = "javax.xml.bind:jaxb-api" ,version.ref = "jaxb-version"}
jxannotation  = {module = "javax.annotation:javax.annotation-api" ,version.ref = "jxannotation-version"}
nimbdus = {module = "com.nimbusds:nimbus-jose-jwt" , version ="9.1.3"}

# JASPER
jasperreports  = {module = "net.sf.jasperreports:jasperreports" ,version.ref = "jasperreports-version"}
openpdf  = {module = "com.github.librepdf:openpdf" ,version.ref = "openpdf-version"}
jasperreportsfonts  = {module = "net.sf.jasperreports:jasperreports-fonts" ,version.ref = "jasperreports-fonts-version"}

mail = {module = "com.sun.mail:javax.mail" , version = "1.6.2"}
json = {module = "org.json:json", version = "20090211"}
velocity = {module = "org.apache.velocity:velocity-engine-core", version = "2.3"}
velocitytools = {module = "org.apache.velocity.tools:velocity-tools-generic", version = "3.1"}
jetbrain = {module = "org.jetbrains.kotlin:kotlin-stdlib", version = "1.6.20-RC" }
okhttp = {module = "com.squareup.okhttp3:okhttp", version = "4.10.0-RC1"} #5.0.0-alpha.6
okhttpokio = {module = "com.squareup.okio:okio", version = "3.0.0"} #3.0.0
commonsvalidator  = {module = "commons-validator:commons-validator" ,version.ref = "commons-validator-version"}
commonsfileupload  = {module = "commons-fileupload:commons-fileupload" ,version.ref = "commons-fileupload-version"}
commonsconfiguration2  = {module = "org.apache.commons:commons-configuration2" ,version.ref = "commons-configuration2-version"}
commonsdigester = {module = "commons-digester:commons-digester" ,version.ref = "commons-digester-version"}
imgscalrlib = {module = "org.imgscalr:imgscalr-lib" ,version.ref = "imgscalr-lib-version"}
batikall = {module = "org.apache.xmlgraphics:batik-all" ,version.ref = "batik-all-version"}
fop = {module = "org.apache.xmlgraphics:fop" ,version.ref = "fop-version"}
javaimagescaling = {module = "com.mortennobel:java-image-scaling" ,version.ref = "java-image-scaling-version"}
jmsapi  = {module = "javax.jms:javax.jms-api" ,version.ref = "jms-api-version"}
hazelcast = {module = "com.hazelcast:hazelcast" ,version.ref = "hazelcast-version"}
hazelcastspring = {module = "com.hazelcast:hazelcast-spring" ,version.ref = "hazelcast-version"}
ddplist  = {module = "com.googlecode.plist:dd-plist" ,version.ref = "dd-plist-version"}
apachehttpcore = {module = "org.apache.httpcomponents:httpcore", version = "4.4.14"}
googlehttpclient = {module = "com.google.http-client:google-http-client" ,version.ref = "google-http-client-version"}
googlehttpclientjackson = {module = "com.google.http-client:google-http-client-jackson2" ,version.ref = "google-http-client-version"}
freemarker = {module = "org.freemarker:freemarker" ,version.ref = "freemarker-version"}
springintegrationmail = {module = "org.springframework.integration:spring-integration-mail" ,version.ref = "spring-integration-mail-version"}
velocityenginecore = {module = "org.apache.velocity:velocity-engine-core" ,version.ref = "velocity-engine-core-version"}
owaspcsrfguard = {module = "org.owasp:csrfguard" ,version.ref = "owasp-csrfguard-version"}
wsdl4j = {module = "wsdl4j:wsdl4j" ,version.ref = "wsdl4j-version"}


apachetaglib = {module = "org.apache.taglibs:taglibs-standard-impl", version = "1.2.5"}
jstl = {module = "javax.servlet.jsp.jstl:jstl-api", version = "1.2"}
tiles = {module = "org.apache.tiles:tiles-api", version = "3.0.8"}
tilescore = {module = "org.apache.tiles:tiles-core", version = "3.0.8"}
tilestemplate = {module = "org.apache.tiles:tiles-template", version = "3.0.8"}
tilesjsp = {module = "org.apache.tiles:tiles-jsp", version = "3.0.8"}
tilesservlet = {module = "org.apache.tiles:tiles-servlet", version = "3.0.8"}
snakeyml = {module = "org.yaml:snakeyaml", version = "1.29"}

tagitcore= {module = "com.tagit.commons:tagit-core" ,version.ref = "tagit-Core-version"}
tagitcoreext = {module = "com.tagit.commons:tagit-core-ext" ,version.ref = "tagit-Core-version"}
tagitcorerest= {module = "com.tagit.commons:tagit-core-rest" ,version.ref = "tagit-Core-version"}
tagitcoretest = {module = "com.tagit.commons:tagit-core-test", version.ref = "tagit-Core-version"}

mxlogger= {module = "com.mobeix:mxlogger" ,version.ref = "mxlogger-version"}
mxtenancy= {module = "com.mobeix:mxtenancy" ,version.ref = "mxtenancy-version"}


nimbusjosejwt  = {module = "com.nimbusds:nimbus-jose-jwt" ,version.ref = "nimbusjosejwt-version"}
jsonsmart  = {module = "net.minidev:json-smart" ,version.ref = "jsonsmart-version"}
swaggermodels  = {module = "io.swagger:swagger-models" ,version.ref = "swaggermodels-version"}
c3p0  = {module = "com.mchange:c3p0" ,version.ref = "c3p0-version"}
quartz  = {module = "org.quartz-scheduler:quartz" ,version.ref = "quartz-version"}
poi  = {module = "org.apache.poi:poi" ,version.ref = "poi-version"}
jdk15on  = {module = "org.bouncycastle:bcprov-ext-jdk15on" ,version.ref = "jdk15on-version"}
saxondom  = {module = "net.sf.saxon:saxon-dom" ,version.ref = "saxon-dom-version"}
saxonsql = {module = "net.sf.saxon:saxon-sql" ,version.ref = "saxon-dom-version"}
quartzjob = {module = "org.quartz-scheduler:quartz-jobs" ,version.ref = "quartz-version"}



springbootbom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot-version" }
springcloudbom = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud-Version" }
springbom = { module = "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin", version.ref = "springs-core-version" }
springbootstarteraop = {module = "org.springframework.boot:spring-boot-starter-aop"}


springcloudstarterbootstrap = {module = "org.springframework.cloud:spring-cloud-starter-bootstrap" }
springbootweb = {module = "org.springframework.boot:spring-boot-starter-web"}
springbootwebs = {module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot-version"}
springbootdatajpa = {module = "org.springframework.boot:spring-boot-starter-data-jpa"}
springbootdatajdbc = {module = "org.springframework.boot:spring-boot-starter-jdbc"}
springbootstarterlog4j2 = {module = "org.springframework.boot:spring-boot-starter-log4j2"}
springbootstarterconfig = {module = "org.springframework.cloud:spring-cloud-starter-config"}
springcloudconfigserver = {module = "org.springframework.cloud:spring-cloud-config-server"}
springbootstarteractuator = {module = "org.springframework.boot:spring-boot-starter-actuator"}
springbootstartervalidation = {module = "org.springframework.boot:spring-boot-starter-validation"}
springbootstarterspringfox = {module = "io.springfox:springfox-boot-starter"}
springbootstartertest = {module = "org.springframework.boot:spring-boot-starter-test"}
springbootstarterhateoas = {module = "org.springframework.boot:spring-boot-starter-hateoas"}
springbootstarterquartz = {module = "org.springframework.boot:spring-boot-starter-quartz"}

springbootstartersleuth = {module = "org.springframework.cloud:spring-cloud-starter-sleuth"}
springbootcloudzipkin = {module = "org.springframework.cloud:spring-cloud-sleuth-zipkin"}
micrometer = {module = "io.micrometer:micrometer-registry-prometheus",version.ref = "micrometer-version"}
micrometerjmx = {module = "io.micrometer:micrometer-registry-jmx"}
tomcatruntime = {module = "org.springframework.boot:spring-boot-starter-tomcat", version.ref = "spring-boot-version"}

springbootstarter = {module= "org.springframework.boot:spring-boot-starter"}
springbootconfigurationprocessor = {module = "org.springframework.boot:spring-boot-configuration-processor"}
springbootstarterdataredis = {module = "org.springframework.boot:spring-boot-starter-data-redis"}	
springbootstarterthymeleaf = {module = "org.springframework.boot:spring-boot-starter-thymeleaf"}
thymeleafextraspringsecurity5 = {module = "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"}
springcloudstarteroauth2 = {module = "org.springframework.cloud:spring-cloud-starter-oauth2", version.ref = "spring-clouds-starter-oauth2"}
springsecurityoauth2 = {module = "org.springframework.security.oauth:spring-security-oauth2", version.ref = "spring-security-oauth2-version"}

springdatajpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-data-jpa-Version" }
	
springcore = {module = "org.springframework:spring-core" ,version.ref = "springcore-version"}
springbeans = {module = "org.springframework:spring-beans" ,version.ref = "springcore-version"}
springcontext = {module = "org.springframework:spring-context" ,version.ref = "springcore-version"}
springjdbc = {module = "org.springframework:spring-jdbc" ,version.ref = "springcore-version"}
springweb = {module = "org.springframework:spring-web" ,version.ref = "springcore-version"}
springaop = {module = "org.springframework:spring-aop" ,version.ref = "springcore-version"}
springorm = {module = "org.springframework:spring-orm" ,version.ref = "springcore-version"}
springcontextsupport = {module = "org.springframework:spring-context-support" ,version.ref = "springcore-version"}
springtx = {module = "org.springframework:spring-tx",version.ref = "springcore-version"}
springmvc = {module = "org.springframework:spring-webmvc",version.ref = "springcore-version"}
springsecurity={module ="org.springframework.boot:spring-boot-starter-security"}
springsecuritytest = { module = "org.springframework.security:spring-security-test"}
springwebflux = {module = "org.springframework.boot:spring-boot-starter-webflux"}
springgateway = {module = "org.springframework.cloud:spring-cloud-starter-gateway"}
springr2dbc = {module = "org.springframework.boot:spring-boot-starter-data-r2dbc"}
springsecurityjwt = {module = "org.springframework.security:spring-security-jwt",version = "1.1.1.RELEASE"}
springreactivestream = {module = "org.reactivestreams:reactive-streams"}
springreactivesio = {module = "io.projectreactor:reactor-core"}
springrr2dbcspi = {module = "io.r2dbc:r2dbc-spi"}
springreactivestest = {module = "io.projectreactor:reactor-test"}

hibernatecore = {module = "org.hibernate:hibernate-core" ,version.ref = "hibernate-version"}
hibernateentitymanager = {module = "org.hibernate:hibernate-entitymanager",version.ref = "hibernate-version"}
hibernateehcache = {module = "org.hibernate:hibernate-ehcache",version.ref = "hibernate-version"}
hibernatecommonsannotations = {module = "org.hibernate.common:hibernate-commons-annotations",version.ref = "hibernate-annotation-version"}
hibernatejpa = {module = "org.hibernate.javax.persistence:hibernate-jpa-2.1-api",version.ref = "hibernatejpa-version"}
hibernatevalidator = {module = "org.hibernate.validator:hibernate-validator",version.ref = "hibernate-version"}

hikari = {module = "com.zaxxer:HikariCP", version = "4.0.3"}
hazzlecast = {module = "com.hazelcast:hazelcast", version = "5.1.1"}
hazzlecastspring = {module = "com.hazelcast:hazelcast-spring", version = "5.1.1"}

jbosslogging = {module = "org.jboss.logging:jboss-logging",version.ref = "jboss-version"}
jbossjandex = {module = "org.jboss:jandex" ,version.ref = "jboss-jandex-version"}

ehcache = {module = "net.sf.ehcache:ehcache" ,version.ref = "ehcache-version"}
ehcachecore = {module = "net.sf.ehcache:ehcache-core" ,version.ref = "ehcachecore-version"}

aspectjweaver  = {module = "org.aspectj:aspectjweaver" ,version.ref = "aspect-version"}
aspectjrt  = {module = "org.aspectj:aspectjrt" ,version.ref = "aspect-version"}

antlr  = {module = "antlr:antlr" ,version.ref = "antlr-version"}
javassist  = {module = "org.javassist:javassist" ,version.ref = "javassist-version"}

swagger2  = {module = "io.springfox:springfox-swagger2" ,version.ref = "swagger2-version"}
swaggerui  = {module = "io.springfox:springfox-swagger-ui" ,version.ref = "swaggerui-version"}
swaggerannotation  = {module = "io.swagger:swagger-annotations" ,version.ref = "swaggerannotation-version"}

springkafka = {module = "org.springframework.kafka:spring-kafka"}
kafkaclients = {module = "org.apache.kafka:kafka-clients" ,version.ref = "kafka-version"}
kafkatest = {module = "org.springframework.kafka:spring-kafka-test"}

mssqljdbc = {module = "com.microsoft.sqlserver:mssql-jdbc",version="9.4.1.jre11"}
oraclejdbc = {module = "com.oracle.database.jdbc:ojdbc11",version.ref = "oracle-version"}
mysqljdbc = {module = "mysql:mysql-connector-java"}

mysqlreactive = {module = "dev.miku:r2dbc-mysql"}
oraclereactive = {module = "com.oracle.database.r2dbc:oracle-r2dbc"}
mssqlreactive = {module = "io.r2dbc:r2dbc-mssql"}

apachecommonstext = {module = "org.apache.commons:commons-text", version.ref = "commons-text-version"}
apachecommonslang3 = {module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3-version"}
apachecommonscollections4 = {module = "org.apache.commons:commons-collections4", version.ref = "commons-collections-version"}
apachecommonscodec = {module = "commons-codec:commons-codec", version.ref = "commons-codec-version"}
apachehttpclient = {module = "org.apache.httpcomponents:httpclient", version.ref = "http-client-version"}
apachecommonshttpclient = {module = "commons-httpclient:commons-httpclient" ,version.ref = "commons-httpclient-version"}
appachecommonlogging =  {module = "commons-logging:commons-logging"}
apachegeronimo  = {module = "org.apache.geronimo.specs:geronimo-jta_1.1_spec" ,version.ref = "apachegeronimo-version"}
beanutils  = {module = "commons-beanutils:commons-beanutils" ,version.ref = "beanutils-version"}
commonslang  = {module = "commons-lang:commons-lang" ,version.ref = "commonslang-version"}
commonslang26  = {module = "commons-lang:commons-lang" ,version = "2.6"}
commonsio  = {module = "commons-io:commons-io" ,version.ref = "commons-io-version"}
apachecommonscompress = {module = "org.apache.commons:commons-compress" ,version.ref = "commons-compress-version"}
oscache = {module = "opensymphony:oscache" ,version.ref = "oscache-version"}



bucket4j = {module = "com.github.vladimir-bukhtoyarov:bucket4j-core",version= '6.4.1'}
googlegson = {module = "com.google.code.gson:gson", version.ref = "google-gson-version"}
guava  = {module = "com.google.guava:guava" ,version.ref = "guava-version"}
zxing  = {module = "com.google.zxing:core" ,version.ref = "zxing-version"}
googleauthcore  = {module = "com.warrenstrange:core" ,version.ref = "googleauthcore-version"}
googleauth  = {module = "com.warrenstrange:googleauth" ,version.ref = "googleauth-version"}
jsonwebtoken = {module = "io.jsonwebtoken:jjwt", version = "0.9.1"}

jacksondataformat = {module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson-dataformat-version"}
fasterxmldataformatclassmate = {module = "com.fasterxml.jackson.dataformat:classmate", version.ref = "fasterxml-dataformat-version"} 
fasterxmlclassmate = {module = "com.fasterxml:classmate", version.ref = "fasterxml-classmate-version"} 
jacksondatabind = {module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-databind-version"}   
jacksoncore = {module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson-core-version"}

xmlresolver  = {module = "xml-resolver:xml-resolver" ,version.ref = "xml-resolver-version"}
xmlbeans  = {module = "org.apache.xmlbeans:xmlbeans" ,version.ref = "xmlbeans-version"}
xmlbeansqname  = {module = "org.apache.xmlbeans:xmlbeans-qname" ,version.ref = "xmlbeans-qname-version"}
xmlbeansxmlpublic  = {module = "org.apache.xmlbeans:xmlbeans-xmlpublic" ,version.ref = "xmlbeans-xmlpublic-version"}
xmlapis  = {module = "xml-apis:xml-apis" ,version.ref = "xml-apis-version"}

dom4j  = {module = "org.dom4j:dom4j" ,version.ref = "dom4j-version"}
bcprovjdk15on  = {module = "org.bouncycastle:bcprov-jdk15on" ,version.ref = "bcprovjdk15on-version"}

bcprovjdk18on  = {module = "org.bouncycastle:bcprov-jdk18on" ,version.ref = "bcprov-jdk18on-version"}
bcpkixjdk18on  = {module = "org.bouncycastle:bcpkix-jdk18on" ,version.ref = "bcprov-jdk18on-version"}

flywaycore = {module = "org.flywaydb:flyway-core", version.ref = "flyway-core-version"}
orikacore = {module = "ma.glasnost.orika:orika-core", version.ref = "orika-core-version"}

encryption = {module = "com.idealista:format-preserving-encryption", version.ref = "encryption-version"}
jasypt = {module = "org.jasypt:jasypt", version.ref = "jasypt-version"}
pullparser = {module = "pull-parser:pull-parser", version.ref = "pull-parser-version"}


lombokannotation = {module = "org.projectlombok:lombok", version.ref = "lombok-annotation-version"}
disruptor = {module = "com.lmax:disruptor", version.ref = "disruptor-version"}

tomcatembedjasper= {module = "org.apache.tomcat.embed:tomcat-embed-jasper", version.ref ="tomcat-embed-version" }
servletjstl = {module = "javax.servlet:jstl" ,version.ref = "servlet-jstl-version"}
antisamy = {module = "org.owasp.antisamy:antisamy" ,version.ref = "antisamy-version"}
androidutil = {module = "com.yy:android-util" ,version.ref = "android-util-version"}
commonscompiler = {module = "org.codehaus.janino:commons-compiler" ,version.ref = "commons-compiler-version"}
apachecommonsconfiguration = {module = "commons-configuration:commons-configuration" ,version.ref = "commons-configuration-version"}





log4japi = {module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j-api-version"}
log4jcore = {module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j-api-version"}
log4jtoslf4j = {module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4j-api-version"}
slf4j  = {module = "org.slf4j:slf4j-api" ,version.ref = "slf4j-version"}

junit  = {module = "junit:junit" ,version.ref = "junit-version"}
springtest  = {module = "org.springframework:spring-test" ,version.ref = "springtest-version"}
hamcrestcore  = {module = "org.hamcrest:hamcrest-core" ,version.ref = "hamcrestcore-version"}
mockitoall  = {module = "org.mockito:mockito-all" ,version.ref = "mockitoall-version"}

powermockapi = {module = "org.powermock:powermock-api-mockito",version.ref = "powermock-version"}
powermockcore = {module = "org.powermock:powermock-core",version.ref = "powermock-version"}
powermockjunit4 = {module = "org.powermock:powermock-module-junit4",version.ref = "powermock-version"}
jacocoagent = {module = "org.jacoco:org.jacoco.agent",version.ref = "jacoco-agent-version"}

jupiterapi  = {module = "org.junit.jupiter:junit-jupiter-api" ,version.ref = "jupiter-api-version"}
jupiterparams  = {module = "org.junit.jupiter:junit-jupiter-params" ,version.ref = "jupiter-api-version"}
jupiterengine  = {module = "org.junit.jupiter:junit-jupiter-engine" ,version.ref = "jupiter-api-version"}
hamcrest = {module = "org.hamcrest:hamcrest",version.ref = "hamcrest-version"}

mockitocore  = {module = "org.mockito:mockito-core" ,version.ref = "mockito-core-version"}
mockitojunitjupiter  = {module = "org.mockito:mockito-junit-jupiter" ,version.ref = "mockito-core-version"}

poiooxml  = {module = "org.apache.poi:poi-ooxml" ,version.ref = "poiooxml-version"}



[bundles]
springcores = ["springcore", "springbeans", "springcontext", "springjdbc", "springweb", "springaop", "springorm", "springcontextsupport", "springtx"]
hibernates = ["hibernatecore","hibernateentitymanager","hibernateehcache","hibernatejpa","hibernatecommonsannotations","jbossjandex"]
jboss = ["jbosslogging","jbossjandex"]
ehcache = ["ehcache","ehcachecore"]
swagger = ["swagger2","swaggerui"]
aspectj = ["aspectjweaver","aspectjrt"]
appachelog4j = ["log4japi","log4jcore"]
appachecommon = ["apachecommonslang3","apachecommonscollections4","apachecommonscodec","beanutils","commonslang","commonsio"]
encryption = ["jasypt","encryption","pullparser"]
google = ["googlegson","guava"]
mockito=["powermockapi","powermockcore","powermockjunit4","jacocoagent","mockitocore","mockitojunitjupiter"]
junitjupiter=["jupiterapi","jupiterparams","jupiterengine"]

[plugins]
springboot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
springcore = { id = "io.spring.dependency-management", version.ref = "springs-core-version" }